// <auto-generated />
using System;
using CovidStats.AccessData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CovidStats.Migrations
{
    [DbContext(typeof(CovidStatsDataContext))]
    [Migration("20210110181247_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CovidStats.AccessData.Bezirk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BundeslandID")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("BundeslandID");

                    b.ToTable("Bezirks");
                });

            modelBuilder.Entity("CovidStats.AccessData.Bundesland", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Bundeslands");
                });

            modelBuilder.Entity("CovidStats.AccessData.Cases", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BezirkID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Deaths")
                        .HasColumnType("int");

                    b.Property<int>("Incidences")
                        .HasColumnType("int");

                    b.Property<int>("Infections")
                        .HasColumnType("int");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BezirkID");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("CovidStats.AccessData.Bezirk", b =>
                {
                    b.HasOne("CovidStats.AccessData.Bundesland", "Bundesland")
                        .WithMany("Bezirke")
                        .HasForeignKey("BundeslandID");

                    b.Navigation("Bundesland");
                });

            modelBuilder.Entity("CovidStats.AccessData.Cases", b =>
                {
                    b.HasOne("CovidStats.AccessData.Bezirk", "Bezirk")
                        .WithMany("Cases")
                        .HasForeignKey("BezirkID");

                    b.Navigation("Bezirk");
                });

            modelBuilder.Entity("CovidStats.AccessData.Bezirk", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("CovidStats.AccessData.Bundesland", b =>
                {
                    b.Navigation("Bezirke");
                });
#pragma warning restore 612, 618
        }
    }
}
